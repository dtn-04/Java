
import java.util.Random;
import java.util.Scanner;

public class slotsMachine {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int balance = 100;
        int bet, payout;
        String[] row;
        String again;

        System.out.println("*******************");
        System.out.println("CH√ÄO M·ª™NG ƒê·∫æN V·ªöI M√ÅY SLOT JAVA");
        System.out.println("Bi·ªÉu t∆∞·ª£ng: üçí üçá üçà üçâ üçä üçã üçå");
        System.out.println("*******************");

        do {
            while (balance > 0) {
                System.out.println("S·ªë d∆∞ hi·ªán t·∫°i: $" + balance);
                System.out.print("Nh·∫≠p s·ªë ti·ªÅn c∆∞·ª£c: ");
                bet = scanner.nextInt();

                if (bet > balance) {
                    System.out.println("KH√îNG ƒê·ª¶ TI·ªÄN");
                    continue;
                } else if (bet <= 0) {
                    System.out.println("Ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0");
                    continue;
                }

                balance -= bet;
                System.out.println("ƒêang quay...");
                row = spinRow();
                printRow(row);
                payout = getPayout(row, bet);

                if (payout > 0) {
                    System.out.println("B·∫°n th·∫Øng $" + payout);
                    balance += payout;
                } else {
                    System.out.println("R·∫•t ti·∫øc, b·∫°n ƒë√£ thua v√°n n√†y");
                }

                if (balance <= 0) {
                    System.out.println("B·∫°n ƒë√£ h·∫øt ti·ªÅn.");
                    break;
                }

                System.out.print("B·∫°n c√≥ mu·ªën ch∆°i ti·∫øp kh√¥ng? (Y/N): ");
                again = scanner.next().toUpperCase();
                if (!again.equals("Y")) {
                    break;
                }
            }

            System.out.print("B·∫Øt ƒë·∫ßu tr√≤ ch∆°i m·ªõi v·ªõi $100? (Y/N): ");
            again = scanner.next().toUpperCase();
            if (again.equals("Y")) {
                balance = 100;
            }

        } while (again.equals("Y"));

        System.out.println("K·∫øt th√∫c tr√≤ ch∆°i!");
    }


    static String[] spinRow(){

        String[] symbols = {"üçí", "üçá", "üçà", "üçâ", "üçä", "üçã", "üçå"};
        String[] row = new String[3];
        Random random = new Random();

        for(int i = 0; i < row.length; i++){
            row[i] = symbols[random.nextInt(symbols.length)];
        }

        return row;
    }

    static void printRow(String[] row){
        System.out.println("*******************");
        System.out.println(" " + String.join(" | ", row));
        System.out.println("*******************");
    }

    static int getPayout(String[] row, int bet){
        if((row[0].equals(row[1])) && row[1].equals(row[2])){
            return switch(row[0]){
                case "üçí" -> bet*3;
                case "üçá" -> bet*4;
                case "üçà" -> bet*5;
                case "üçâ" -> bet*7;
                case "üçä" -> bet*10;
                case "üçã" -> bet*15;
                case "üçå" -> bet*20;
                default -> 0;
            };
        }
        else if((row[0].equals(row[1]))){
            return switch(row[0]){
                case "üçí" -> bet*2;
                case "üçá" -> bet*3;
                case "üçà" -> bet*4;
                case "üçâ" -> bet*5;
                case "üçä" -> bet*6;
                case "üçã" -> bet*7;
                case "üçå" -> bet*10;
                default -> 0;
            };
        }
        else if(row[1].equals(row[2])){
            return switch(row[1]){
                case "üçí" -> bet*2;
                case "üçá" -> bet*3;
                case "üçà" -> bet*4;
                case "üçâ" -> bet*5;
                case "üçä" -> bet*6;
                case "üçã" -> bet*7;
                case "üçå" -> bet*10;
                default -> 0;
            };
        }
        return 0;
    }
}
